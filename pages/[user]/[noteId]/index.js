import Head from 'next/head'
import styles from '@/styles/Note.module.css'
import { useState } from 'react';

//Creates the new Outer File
const AddOuterFile = () => {
    const [fileData, setFileData] = useState({
        title: '',
        titleStyle: '',
        saveButton: ''
    });

    const handleSubmit = event => {
        event.preventDefault();
        setFileData(() => ({ 
            title: fileData.title,
            titleStyle: styles.titleStyle,
            saveButton: styles.saveButton  
        }));
    }

    const handleTitleChange = event => {
        event.preventDefault();
        setFileData(() => ({
            title: event.target.value
        }));
    }


    return (
        <div className='mt-3'> 

        <form onSubmit={handleSubmit}>
            <label>
                <input 
                className={fileData.titleStyle}
                type="text" 
                value={fileData.title}
                onChange={handleTitleChange}
                placeholder='Title'
                spellCheck='false'
                />
            </label>
            <button type='submit' className={fileData.saveButton}>Save</button>
        </form>

        <div className='border border-primary rounded-4 p-5'></div>
        </div>
    );
}





//Create ability to copy outer file like for versioning





//Manages all Outer Files and positions
const OuterContainer = () => {
    const [style, setStyle] = useState(styles.noBox);
    const [allOuterContainers, setAllOuterContainers] = useState([]);
    const [fileID, setFileID] = useState(0);

    const handleRemoval = fileId => {
        const newFiles = allOuterContainers.filter((obj) => {
            if (obj.id !== fileId) {
                return obj;
            }
            });
        setAllOuterContainers(oldFiles => [...newFiles]);
    }
    
    const addOuterFile = (event) => {
        event.preventDefault();

        const newObj = {
            id: fileID + 1,
            file: <AddOuterFile />
        };
        setFileID(prevID => prevID + 1);
        setAllOuterContainers(oldArray => [...oldArray, newObj]);
        setStyle(styles.box);
    }

    return (
        <>
            <Head>
                <title>Flow</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main} >
                <h1>Note Title</h1>
            
                <div className='row border border-primary p-3'>
                    <button className={`btn btn-outline-primary col-4 ${style}`} onClick={addOuterFile}>Add Outer File</button>
                    <span className='col-4'></span>
                    <button className={`btn btn-outline-primary col-4 ${style}`}>Add Text File</button>
                </div>
                
                <div className='px-5'>
                    {fileID > 0 && 
                    allOuterContainers.map(files => 
                        <div key={files.id}>
                                <div> 
                                    {files.file}
                                    <button className={`btn btn-outline-primary float-end p-0 m-0 ${styles.removeOuterFile}`} onClick={() => handleRemoval(files.id)}>Delete</button>
                                </div>
                       </div>)}
                       {console.log(allOuterContainers)}
                </div>
    
            </main>
        </>
    );
}

export default OuterContainer;